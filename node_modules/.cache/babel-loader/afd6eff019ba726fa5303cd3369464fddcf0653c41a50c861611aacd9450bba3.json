{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport authServices from \"../services\";\nimport { showMessage } from \"../../shared/redux/message\";\nexport const loginUser = createAsyncThunk(\"auth/login\", async (input, _ref) => {\n  let {\n    dispatch,\n    rejectWithValue,\n    fulfillWithValue\n  } = _ref;\n  try {\n    const response = await authServices.createItem(input);\n    localStorage.setItem(\"token\", response.data.token);\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\n    localStorage.setItem(\"logged\", \"true\");\n    return fulfillWithValue(response.data);\n  } catch (err) {\n    console.log({\n      err\n    });\n    dispatch(showMessage({\n      severity: \"error\",\n      summary: err.response.data.message\n    }));\n    return rejectWithValue(err.response.data);\n  }\n});\nexport const registerUser = createAsyncThunk(\"auth/register\", async (input, _ref2) => {\n  let {\n    dispatch,\n    rejectWithValue,\n    fulfillWithValue\n  } = _ref2;\n  try {\n    const response = await authServices.post(\"auth/register\", input);\n    localStorage.setItem(\"token\", response.data.token);\n    localStorage.setItem(\"user\", JSON.stringify(response.data));\n    localStorage.setItem(\"logged\", \"true\");\n    return fulfillWithValue(response.data);\n  } catch (err) {\n    console.log({\n      err\n    });\n    dispatch(showMessage({\n      severity: \"error\",\n      summary: err.response.data.message\n    }));\n    return rejectWithValue(err.response.data);\n  }\n});\nconst initialState = {\n  logged: localStorage.getItem(\"logged\") === \"true\",\n  error: null,\n  loading: false,\n  user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setUser: (state, payload) => {\n      state.user = payload.payload;\n    },\n    logout: state => {\n      localStorage.clear();\n      state.logged = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    });\n    builder.addCase(loginUser.fulfilled, (state, payload) => {\n      state.loading = false;\n      state.user = payload.payload;\n      state.logged = true;\n    });\n    builder.addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.user = null;\n      state.logged = false;\n      state.error = action.payload.message;\n    });\n    builder.addCase(registerUser.pending, state => {\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    });\n    builder.addCase(registerUser.fulfilled, (state, payload) => {\n      state.loading = false;\n      state.user = payload.payload;\n      state.logged = true;\n    });\n    builder.addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.user = null;\n      state.logged = false;\n      state.error = action.payload.message;\n    });\n  }\n});\nexport const {\n  logout,\n  setUser\n} = authSlice.actions;\nexport const authReducer = authSlice.reducer;\nexport const authSelector = state => state.auth;\nexport default authReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","authServices","showMessage","loginUser","input","dispatch","rejectWithValue","fulfillWithValue","response","createItem","localStorage","setItem","data","token","JSON","stringify","err","console","log","severity","summary","message","registerUser","post","initialState","logged","getItem","error","loading","user","parse","authSlice","name","reducers","setUser","state","payload","logout","clear","extraReducers","builder","addCase","pending","fulfilled","rejected","action","actions","authReducer","reducer","authSelector","auth"],"sources":["/Users/franklin/Downloads/store-main 2/src/modules/auth/redux/index.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport authServices from \"../services\";\nimport { IAuthRequest, IAuthResponse, IRegisterResponse } from \"../types\";\nimport { showMessage } from \"../../shared/redux/message\";\nimport { IRegisterRequest } from \"../types/index\";\n\ninterface IAuthState {\n  logged: boolean;\n  error: any;\n  loading: boolean;\n  user: IAuthResponse | null;\n}\n\nexport const loginUser = createAsyncThunk(\n  \"auth/login\",\n  async (\n    input: IAuthRequest,\n    { dispatch, rejectWithValue, fulfillWithValue }\n  ) => {\n    try {\n      const response = await authServices.createItem<\n        IAuthResponse,\n        IAuthRequest\n      >(input);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      localStorage.setItem(\"logged\", \"true\");\n      return fulfillWithValue(response.data);\n    } catch (err: any) {\n      console.log({ err });\n\n      dispatch(\n        showMessage({ severity: \"error\", summary: err.response.data.message })\n      );\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const registerUser = createAsyncThunk(\n  \"auth/register\",\n  async (\n    input: IRegisterRequest,\n    { dispatch, rejectWithValue, fulfillWithValue }\n  ) => {\n    try {\n      const response = await authServices.post<\n        IRegisterResponse,\n        IRegisterRequest\n      >(\"auth/register\", input);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n      localStorage.setItem(\"logged\", \"true\");\n      return fulfillWithValue(response.data);\n    } catch (err: any) {\n      console.log({ err });\n\n      dispatch(\n        showMessage({ severity: \"error\", summary: err.response.data.message })\n      );\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nconst initialState: IAuthState = {\n  logged: localStorage.getItem(\"logged\") === \"true\",\n  error: null,\n  loading: false,\n  user: localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\")!)\n    : null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setUser: (state: IAuthState, payload: PayloadAction<IAuthResponse>) => {\n      state.user = payload.payload;\n    },\n    logout: (state: IAuthState) => {\n      localStorage.clear();\n      state.logged = false;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loginUser.pending, (state: IAuthState) => {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    });\n    builder.addCase(\n      loginUser.fulfilled,\n      (state: IAuthState, payload: PayloadAction<any>) => {\n        state.loading = false;\n        state.user = payload.payload;\n        state.logged = true;\n      }\n    );\n    builder.addCase(\n      loginUser.rejected,\n      (state: IAuthState, action: PayloadAction<any>) => {\n        state.loading = false;\n        state.user = null;\n        state.logged = false;\n        state.error = action.payload.message;\n      }\n    );\n    builder.addCase(registerUser.pending, (state: IAuthState) => {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    });\n    builder.addCase(\n      registerUser.fulfilled,\n      (state: IAuthState, payload: PayloadAction<any>) => {\n        state.loading = false;\n        state.user = payload.payload;\n        state.logged = true;\n      }\n    );\n    builder.addCase(\n      registerUser.rejected,\n      (state: IAuthState, action: PayloadAction<any>) => {\n        state.loading = false;\n        state.user = null;\n        state.logged = false;\n        state.error = action.payload.message;\n      }\n    );\n  },\n});\n\nexport const { logout, setUser } = authSlice.actions;\n\nexport const authReducer = authSlice.reducer;\nexport const authSelector = (state: RootState): IAuthState => state.auth;\nexport default authReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}