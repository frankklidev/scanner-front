{"ast":null,"code":"export class BaseCrudService {\n  constructor(_axiosInstance, url) {\n    this._axiosInstance = _axiosInstance;\n    this.url = url;\n  }\n  get(url, params) {\n    return this._axiosInstance.get(`${url}`, {\n      params\n    });\n  }\n  post(url, input) {\n    return this._axiosInstance.post(`${url}`, input);\n  }\n  put(url, input) {\n    return this._axiosInstance.put(`${url}`, input);\n  }\n  delete(url) {\n    return this._axiosInstance.delete(`${url}`);\n  }\n  getItems(params) {\n    return this._axiosInstance.get(this.url, {\n      params\n    });\n  }\n  getItemById(itemId, params) {\n    return this._axiosInstance.get(`${this.url}/${itemId}`, {\n      params\n    });\n  }\n  createItem(input) {\n    return this._axiosInstance.post(this.url, input);\n  }\n  updateItem(input) {\n    return this._axiosInstance.put(this.url, input);\n  }\n  filter(input) {\n    return this._axiosInstance.get(this.url, {\n      params: input\n    });\n  }\n}","map":{"version":3,"names":["BaseCrudService","constructor","_axiosInstance","url","get","params","post","input","put","delete","getItems","getItemById","itemId","createItem","updateItem","filter"],"sources":["/Users/franklin/Desktop/Proyectos/store-main 2/src/modules/shared/baseCrud/index.ts"],"sourcesContent":["import { AxiosInstance, AxiosResponse } from \"axios\";\n\nexport class BaseCrudService {\n  constructor(\n    private readonly _axiosInstance: AxiosInstance,\n    private readonly url: string\n  ) {}\n\n  get<T, D = any>(url: string, params?: D): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.get<T>(`${url}`, { params });\n  }\n\n  post<T, S>(url: string, input: S): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.post<T>(`${url}`, input);\n  }\n\n  put<T, S>(url: string, input: S): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.put<T>(`${url}`, input);\n  }\n\n  delete<T>(url: string): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.delete<T>(`${url}`);\n  }\n\n  getItems<T, D = any>(params?: D): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.get<T>(this.url, { params });\n  }\n\n  getItemById<T, S = any>(\n    itemId: string,\n    params?: S\n  ): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.get<T>(`${this.url}/${itemId}`, {\n      params,\n    });\n  }\n\n  createItem<T, S>(input: S): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.post<T>(this.url, input);\n  }\n\n  updateItem<T, S>(input: S): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.put<T>(this.url, input);\n  }\n\n  filter<T = any, S = any>(input: S): Promise<AxiosResponse<T, any>> {\n    return this._axiosInstance.get<T>(this.url, {\n      params: input,\n    });\n  }\n}\n"],"mappings":"AAEA,OAAO,MAAMA,eAAe,CAAC;EAC3BC,WAAW,CACQC,cAA6B,EAC7BC,GAAW,EAC5B;IAAA,KAFiBD,cAA6B,GAA7BA,cAA6B;IAAA,KAC7BC,GAAW,GAAXA,GAAW;EAC3B;EAEHC,GAAG,CAAaD,GAAW,EAAEE,MAAU,EAAkC;IACvE,OAAO,IAAI,CAACH,cAAc,CAACE,GAAG,CAAK,GAAED,GAAI,EAAC,EAAE;MAAEE;IAAO,CAAC,CAAC;EACzD;EAEAC,IAAI,CAAOH,GAAW,EAAEI,KAAQ,EAAkC;IAChE,OAAO,IAAI,CAACL,cAAc,CAACI,IAAI,CAAK,GAAEH,GAAI,EAAC,EAAEI,KAAK,CAAC;EACrD;EAEAC,GAAG,CAAOL,GAAW,EAAEI,KAAQ,EAAkC;IAC/D,OAAO,IAAI,CAACL,cAAc,CAACM,GAAG,CAAK,GAAEL,GAAI,EAAC,EAAEI,KAAK,CAAC;EACpD;EAEAE,MAAM,CAAIN,GAAW,EAAkC;IACrD,OAAO,IAAI,CAACD,cAAc,CAACO,MAAM,CAAK,GAAEN,GAAI,EAAC,CAAC;EAChD;EAEAO,QAAQ,CAAaL,MAAU,EAAkC;IAC/D,OAAO,IAAI,CAACH,cAAc,CAACE,GAAG,CAAI,IAAI,CAACD,GAAG,EAAE;MAAEE;IAAO,CAAC,CAAC;EACzD;EAEAM,WAAW,CACTC,MAAc,EACdP,MAAU,EACsB;IAChC,OAAO,IAAI,CAACH,cAAc,CAACE,GAAG,CAAK,GAAE,IAAI,CAACD,GAAI,IAAGS,MAAO,EAAC,EAAE;MACzDP;IACF,CAAC,CAAC;EACJ;EAEAQ,UAAU,CAAON,KAAQ,EAAkC;IACzD,OAAO,IAAI,CAACL,cAAc,CAACI,IAAI,CAAI,IAAI,CAACH,GAAG,EAAEI,KAAK,CAAC;EACrD;EAEAO,UAAU,CAAOP,KAAQ,EAAkC;IACzD,OAAO,IAAI,CAACL,cAAc,CAACM,GAAG,CAAI,IAAI,CAACL,GAAG,EAAEI,KAAK,CAAC;EACpD;EAEAQ,MAAM,CAAmBR,KAAQ,EAAkC;IACjE,OAAO,IAAI,CAACL,cAAc,CAACE,GAAG,CAAI,IAAI,CAACD,GAAG,EAAE;MAC1CE,MAAM,EAAEE;IACV,CAAC,CAAC;EACJ;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}