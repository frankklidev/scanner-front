{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from \"redux-thunk\";\nimport authReducer from \"../../auth/redux\";\nimport messageReducer from \"../../shared/redux/message\";\nimport productsReducer from \"../../products/redux\";\nimport salesReducer from \"../../sales/redux/index\";\nimport usersReducer from \"../../user/redux\";\nconst middleware = [thunkMiddleware];\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  message: messageReducer,\n  products: productsReducer,\n  sales: salesReducer,\n  users: usersReducer\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware\n});\nexport const useAppDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nexport default store;","map":{"version":3,"names":["useDispatch","combineReducers","configureStore","thunkMiddleware","authReducer","messageReducer","productsReducer","salesReducer","usersReducer","middleware","rootReducer","auth","message","products","sales","users","store","reducer","useAppDispatch"],"sources":["/Users/franklin/Desktop/Proyectos/store-main 2/src/modules/app/store/index.ts"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport {\n  Action,\n  combineReducers,\n  configureStore,\n  ThunkAction,\n  ThunkDispatch,\n} from \"@reduxjs/toolkit\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport authReducer from \"../../auth/redux\";\nimport messageReducer from \"../../shared/redux/message\";\nimport productsReducer from \"../../products/redux\";\nimport salesReducer from \"../../sales/redux/index\";\nimport usersReducer from \"../../user/redux\";\n\nconst middleware = [thunkMiddleware];\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  message: messageReducer,\n  products: productsReducer,\n  sales: salesReducer,\n  users: usersReducer,\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\nexport const useAppDispatch = (): ThunkDispatch<any, any, any> =>\n  useDispatch<AppDispatch>();\nexport default store;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAEEC,eAAe,EACfC,cAAc,QAGT,kBAAkB;AACzB,OAAOC,eAAe,MAAM,aAAa;AAEzC,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,YAAY,MAAM,kBAAkB;AAE3C,MAAMC,UAAU,GAAG,CAACN,eAAe,CAAC;AAEpC,MAAMO,WAAW,GAAGT,eAAe,CAAC;EAClCU,IAAI,EAAEP,WAAW;EACjBQ,OAAO,EAAEP,cAAc;EACvBQ,QAAQ,EAAEP,eAAe;EACzBQ,KAAK,EAAEP,YAAY;EACnBQ,KAAK,EAAEP;AACT,CAAC,CAAC;AACF,MAAMQ,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAEP,WAAW;EACpBD;AACF,CAAC,CAAC;AAKF,OAAO,MAAMS,cAAc,GAAG;EAAA;EAAA,OAC5BlB,WAAW,EAAe;AAAA;AAAC,GADhBkB,cAAc;EAAA,QACzBlB,WAAW;AAAA;AACb,eAAegB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}