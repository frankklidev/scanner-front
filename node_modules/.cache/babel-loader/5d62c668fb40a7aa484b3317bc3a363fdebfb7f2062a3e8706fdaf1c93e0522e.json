{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport productService from \"../services\";\nimport { showMessage } from \"../../shared/redux/message\";\nconst initialState = {\n  loadingProducts: false,\n  products: []\n};\nexport const getProducts = createAsyncThunk(\"get/products\", async (input, _ref) => {\n  let {\n    dispatch,\n    rejectWithValue,\n    fulfillWithValue\n  } = _ref;\n  try {\n    const response = await productService.getItems(input);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    dispatch(showMessage({\n      severity: \"error\",\n      summary: error.response.data.message\n    }));\n    return rejectWithValue([]);\n  }\n});\nexport const getProductById = createAsyncThunk(\"get/product\", async (productId, _ref2) => {\n  let {\n    dispatch,\n    rejectWithValue,\n    fulfillWithValue\n  } = _ref2;\n  try {\n    const response = await productService.getItemById(productId);\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    dispatch(showMessage({\n      severity: \"error\",\n      summary: error.response.data.message\n    }));\n    return rejectWithValue(undefined);\n  }\n});\nexport const createProduct = createAsyncThunk(\"post/products\", async (input, _ref3) => {\n  let {\n    dispatch,\n    rejectWithValue,\n    fulfillWithValue\n  } = _ref3;\n  try {\n    const response = await productService.createItem(input);\n    dispatch(showMessage({\n      severity: \"success\",\n      summary: \"Product successfully registered\"\n    }));\n    return fulfillWithValue(response.data);\n  } catch (error) {\n    dispatch(showMessage({\n      severity: \"error\",\n      summary: error.response.data.message\n    }));\n    return rejectWithValue(undefined);\n  }\n});\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, state => {\n      state.loadingProducts = true;\n    });\n    builder.addCase(getProducts.fulfilled, (state, payload) => {\n      state.loadingProducts = false;\n      state.products = payload.payload;\n    });\n    builder.addCase(getProducts.rejected, state => {\n      state.loadingProducts = false;\n      state.products = [];\n    });\n    builder.addCase(createProduct.pending, state => {\n      state.loadingProducts = true;\n    });\n    builder.addCase(createProduct.fulfilled, (state, payload) => {\n      state.loadingProducts = false;\n      state.products.push(payload.payload);\n    });\n    builder.addCase(createProduct.rejected, state => {\n      state.loadingProducts = false;\n    });\n  }\n});\nexport const productsReducer = productsSlice.reducer;\nexport const productsSelector = state => state.products;\nexport default productsReducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","productService","showMessage","initialState","loadingProducts","products","getProducts","input","dispatch","rejectWithValue","fulfillWithValue","response","getItems","data","error","severity","summary","message","getProductById","productId","getItemById","undefined","createProduct","createItem","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","push","productsReducer","reducer","productsSelector"],"sources":["/Users/franklin/Desktop/Proyectos/store-main 2/src/modules/products/redux/index.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport productService from \"../services\";\nimport { IProduct } from \"../types\";\nimport { showMessage } from \"../../shared/redux/message\";\n\ninterface IProductState {\n  loadingProducts: boolean;\n  products: IProduct[];\n}\n\nconst initialState: IProductState = {\n  loadingProducts: false,\n  products: [],\n};\n\nexport const getProducts = createAsyncThunk(\n  \"get/products\",\n  async (input: any, { dispatch, rejectWithValue, fulfillWithValue }) => {\n    try {\n      const response = await productService.getItems<IProduct[]>(input);\n      return fulfillWithValue(response.data);\n    } catch (error: any) {\n      dispatch(\n        showMessage({ severity: \"error\", summary: error.response.data.message })\n      );\n      return rejectWithValue([]);\n    }\n  }\n);\nexport const getProductById = createAsyncThunk(\n  \"get/product\",\n  async (\n    productId: string,\n    { dispatch, rejectWithValue, fulfillWithValue }\n  ) => {\n    try {\n      const response = await productService.getItemById<IProduct>(productId);\n      return fulfillWithValue(response.data);\n    } catch (error: any) {\n      dispatch(\n        showMessage({ severity: \"error\", summary: error.response.data.message })\n      );\n      return rejectWithValue(undefined);\n    }\n  }\n);\nexport const createProduct = createAsyncThunk(\n  \"post/products\",\n  async (input: any, { dispatch, rejectWithValue, fulfillWithValue }) => {\n    try {\n      const response = await productService.createItem<IProduct, IProduct>(\n        input\n      );\n      dispatch(\n        showMessage({\n          severity: \"success\",\n          summary: \"Product successfully registered\",\n        })\n      );\n      return fulfillWithValue(response.data);\n    } catch (error: any) {\n      dispatch(\n        showMessage({ severity: \"error\", summary: error.response.data.message })\n      );\n      return rejectWithValue(undefined);\n    }\n  }\n);\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getProducts.pending, (state) => {\n      state.loadingProducts = true;\n    });\n    builder.addCase(getProducts.fulfilled, (state, payload) => {\n      state.loadingProducts = false;\n      state.products = payload.payload;\n    });\n    builder.addCase(getProducts.rejected, (state) => {\n      state.loadingProducts = false;\n      state.products = [];\n    });\n    builder.addCase(createProduct.pending, (state) => {\n      state.loadingProducts = true;\n    });\n    builder.addCase(createProduct.fulfilled, (state, payload) => {\n      state.loadingProducts = false;\n      state.products.push(payload.payload);\n    });\n    builder.addCase(createProduct.rejected, (state) => {\n      state.loadingProducts = false;\n    });\n  },\n});\n\nexport const productsReducer = productsSlice.reducer;\nexport const productsSelector = (state: RootState): IProductState =>\n  state.products;\nexport default productsReducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAOC,cAAc,MAAM,aAAa;AAExC,SAASC,WAAW,QAAQ,4BAA4B;AAOxD,MAAMC,YAA2B,GAAG;EAClCC,eAAe,EAAE,KAAK;EACtBC,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGP,gBAAgB,CACzC,cAAc,EACd,OAAOQ,KAAU,WAAsD;EAAA,IAApD;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAiB,CAAC;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,cAAc,CAACW,QAAQ,CAAaL,KAAK,CAAC;IACjE,OAAOG,gBAAgB,CAACC,QAAQ,CAACE,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBN,QAAQ,CACNN,WAAW,CAAC;MAAEa,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAEF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI;IAAQ,CAAC,CAAC,CACzE;IACD,OAAOR,eAAe,CAAC,EAAE,CAAC;EAC5B;AACF,CAAC,CACF;AACD,OAAO,MAAMS,cAAc,GAAGnB,gBAAgB,CAC5C,aAAa,EACb,OACEoB,SAAiB,YAEd;EAAA,IADH;IAAEX,QAAQ;IAAEC,eAAe;IAAEC;EAAiB,CAAC;EAE/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,cAAc,CAACmB,WAAW,CAAWD,SAAS,CAAC;IACtE,OAAOT,gBAAgB,CAACC,QAAQ,CAACE,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBN,QAAQ,CACNN,WAAW,CAAC;MAAEa,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAEF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI;IAAQ,CAAC,CAAC,CACzE;IACD,OAAOR,eAAe,CAACY,SAAS,CAAC;EACnC;AACF,CAAC,CACF;AACD,OAAO,MAAMC,aAAa,GAAGvB,gBAAgB,CAC3C,eAAe,EACf,OAAOQ,KAAU,YAAsD;EAAA,IAApD;IAAEC,QAAQ;IAAEC,eAAe;IAAEC;EAAiB,CAAC;EAChE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,cAAc,CAACsB,UAAU,CAC9ChB,KAAK,CACN;IACDC,QAAQ,CACNN,WAAW,CAAC;MACVa,QAAQ,EAAE,SAAS;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CACH;IACD,OAAON,gBAAgB,CAACC,QAAQ,CAACE,IAAI,CAAC;EACxC,CAAC,CAAC,OAAOC,KAAU,EAAE;IACnBN,QAAQ,CACNN,WAAW,CAAC;MAAEa,QAAQ,EAAE,OAAO;MAAEC,OAAO,EAAEF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACI;IAAQ,CAAC,CAAC,CACzE;IACD,OAAOR,eAAe,CAACY,SAAS,CAAC;EACnC;AACF,CAAC,CACF;AAED,MAAMG,aAAa,GAAGxB,WAAW,CAAC;EAChCyB,IAAI,EAAE,UAAU;EAChBtB,YAAY;EACZuB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACvB,WAAW,CAACwB,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAAC3B,eAAe,GAAG,IAAI;IAC9B,CAAC,CAAC;IACFwB,OAAO,CAACC,OAAO,CAACvB,WAAW,CAAC0B,SAAS,EAAE,CAACD,KAAK,EAAEE,OAAO,KAAK;MACzDF,KAAK,CAAC3B,eAAe,GAAG,KAAK;MAC7B2B,KAAK,CAAC1B,QAAQ,GAAG4B,OAAO,CAACA,OAAO;IAClC,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACvB,WAAW,CAAC4B,QAAQ,EAAGH,KAAK,IAAK;MAC/CA,KAAK,CAAC3B,eAAe,GAAG,KAAK;MAC7B2B,KAAK,CAAC1B,QAAQ,GAAG,EAAE;IACrB,CAAC,CAAC;IACFuB,OAAO,CAACC,OAAO,CAACP,aAAa,CAACQ,OAAO,EAAGC,KAAK,IAAK;MAChDA,KAAK,CAAC3B,eAAe,GAAG,IAAI;IAC9B,CAAC,CAAC;IACFwB,OAAO,CAACC,OAAO,CAACP,aAAa,CAACU,SAAS,EAAE,CAACD,KAAK,EAAEE,OAAO,KAAK;MAC3DF,KAAK,CAAC3B,eAAe,GAAG,KAAK;MAC7B2B,KAAK,CAAC1B,QAAQ,CAAC8B,IAAI,CAACF,OAAO,CAACA,OAAO,CAAC;IACtC,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACP,aAAa,CAACY,QAAQ,EAAGH,KAAK,IAAK;MACjDA,KAAK,CAAC3B,eAAe,GAAG,KAAK;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMgC,eAAe,GAAGZ,aAAa,CAACa,OAAO;AACpD,OAAO,MAAMC,gBAAgB,GAAIP,KAAgB,IAC/CA,KAAK,CAAC1B,QAAQ;AAChB,eAAe+B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}